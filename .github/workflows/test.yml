name: Test tap-myqsql

on:
  push:
    branches: [main]
    paths:
    - tap_mysql/**
    - tests/**
    - poetry.lock
    - pyproject.toml
    - .github/workflows/test.yml
  pull_request:
    branches: [main]
    paths:
    - tap_mysql/**
    - tests/**
    - poetry.lock
    - pyproject.toml
    - .github/workflows/test.yml
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      PIP_CONSTRAINT: ${{ github.workspace }}/.github/workflows/constraints.txt
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Fix Permissions
      run: |
        chmod 777 -R ./ssh_tunnel/ssh_host_keys
        chmod 777 -R ./ssh_tunnel/sshd

    - name: Set up MySQL containers (SSH Included)
      run: |
        docker compose -f docker-compose.yml up -d

    - uses: isbang/compose-action@8be2d741e891ac9b8ac20825e6f3904149599925 # v2.2.0

    - name: Set up Python ${{ matrix.python-version }}
      id: setup-python
      uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Upgrade pip
      run: |
        pip install pip
        pip --version
    - name: Install Poetry
      run: |
        pipx install --python ${{ steps.setup-python.outputs.python-path }} poetry
        poetry --version
    - name: Install Tox
      run: |
        pipx install --python ${{ steps.setup-python.outputs.python-path }} tox
        tox --version
    - name: Install dependencies
      run: |
        poetry install
    - name: Run pytest
      run: |
        poetry run pytest
    - name: Run lint
      run: |
        tox -e typing

# To test mysql client 1. docker exec -it 012c /bin/bash (ssh server) 2. apk add mysql mysql-client 3. mysql -h 10.5.0.5 -P 3306 -u root -ppassword
