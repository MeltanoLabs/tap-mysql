version: 1
send_anonymous_usage_stats: true
project_id: tap-mysql
default_environment: test
environments:
- name: test
plugins:
  extractors:
  - name: tap-mysql
    namespace: tap_mysql
    label: MySQL/MariaDB
    variant: meltanolabs
    repo: https://github.com/MeltanoLabs/tap-mysql
    pip_url: -e .
    executable: tap-mysql
    description: MySQL/MariaDB database extractor
    logo_url: /assets/logos/extractors/mysql.png
    capabilities:
    - about
    - batch
    - catalog
    - discover
    - schema-flattening
    - state
    - stream-maps
    settings_group_validation:
    - - ssh_tunnel.enable
      - ssh_tunnel.host
      - ssh_tunnel.port
      - ssh_tunnel.private_key
      - ssh_tunnel.username
    settings:
    - name: batch_config.encoding.compression
      kind: options
      label: Batch Compression Format
      description: Compression format to use for batch files.
      options:
      - label: GZIP
        value: gzip
      - label: None
        value: none
    - name: batch_config.encoding.format
      kind: options
      label: Batch Encoding Format
      description: Format to use for batch files.
      options:
      - label: JSONL
        value: jsonl
      - label: Parquet
        value: parquet
    - name: batch_config.storage.prefix
      kind: string
      label: Batch Storage Prefix
      description: Prefix to use when writing batch files.
    - name: batch_config.storage.root
      kind: string
      label: Batch Storage Root
      description: Root path to use when writing batch files.
    - name: database
      kind: string
      label: Database
      description: Database name. Note if sqlalchemy_url is set this will be ignored.
    - name: faker_config.locale
      kind: array
      label: Faker Locale
      description: 'One or more LCID locale strings to produce localized output for:
        https://faker.readthedocs.io/en/master/#localization'
    - name: faker_config.seed
      kind: string
      label: Faker Seed
      description: 'Value to seed the Faker generator for deterministic output: https://faker.readthedocs.io/en/master/#seeding-the-generator'
    - name: filter_schemas
      kind: array
      label: Filter Schemas
      description: If an array of schema names is provided, the tap will only process
        the specified MySQL schemas and ignore others. If left blank, the tap automatically
        determines ALL available MySQL schemas.
    - name: flattening_enabled
      kind: boolean
      label: Enable Schema Flattening
      description: "'True' to enable schema flattening and automatically expand nested
        properties."
    - name: flattening_max_depth
      kind: integer
      label: Max Flattening Depth
      description: The max depth to flatten schemas.
    - name: host
      kind: string
      label: Host
      description: Hostname for mysql instance. Note if sqlalchemy_url is set this
        will be ignored.
    - name: is_vitess
      kind: boolean
      label: Is Vitess
      description: By default we'll check if the database is a Vitess instance. If
        you would rather not automatically check, set this to `False`. See Vitess/PlanetScale
        documentation below for more information.
    - name: password
      kind: string
      label: Password
      description: Password used to authenticate. Note if sqlalchemy_url is set this
        will be ignored.
      sensitive: true
    - name: port
      kind: integer
      value: 3306
      label: Port
      description: The port on which mysql is awaiting connection. Note if sqlalchemy_url
        is set this will be ignored.
    - name: sqlalchemy_options
      kind: object
      label: SQLAlchemy Options
      description: Sqlalchemy_url options (also called the query), to connect to PlanetScale
        you must turn on SSL see PlanetScale information below. Note if sqlalchemy_url
        is set this will be ignored.
    - name: sqlalchemy_url
      kind: string
      label: SQLAlchemy URL
      description: Example pymysql://[username]:[password]@localhost:3306/[db_name][?options]
        see https://docs.sqlalchemy.org/en/20/dialects/mysql.html#module-sqlalchemy.dialects.mysql.pymysql
        for more information
    - name: ssh_tunnel.enable
      kind: boolean
      value: false
      label: SSH Tunnel Enable
      description: Enable an ssh tunnel (also known as bastion host), see the other
        ssh_tunnel.* properties for more details
    - name: ssh_tunnel.host
      kind: string
      label: SSH Tunnel Host
      description: Host of the bastion host, this is the host we'll connect to via
        ssh
    - name: ssh_tunnel.port
      kind: integer
      value: 22
      label: SSH Tunnel Port
      description: Port to connect to bastion host
    - name: ssh_tunnel.private_key
      kind: string
      label: SSH Tunnel Private Key
      description: Private Key for authentication to the bastion host
      sensitive: true
    - name: ssh_tunnel.private_key_password
      kind: string
      label: SSH Tunnel Private Key Password
      description: Private Key Password, leave None if no password is set
      sensitive: true
    - name: ssh_tunnel.username
      kind: string
      label: SSH Tunnel Username
      description: Username to connect to bastion host
    - name: stream_map_config
      kind: object
      label: User Stream Map Configuration
      description: User-defined config values to be used within map expressions.
    - name: stream_maps
      kind: object
      label: Stream Maps
      description: Config object for stream maps capability. For more information
        check out [Stream Maps](https://sdk.meltano.com/en/latest/stream_maps.html).
    - name: user
      kind: string
      label: User
      description: User name used to authenticate. Note if sqlalchemy_url is set this
        will be ignored.
  loaders:
  - name: target-jsonl
    variant: andyh1203
    pip_url: target-jsonl
