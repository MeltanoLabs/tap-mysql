[tool.poetry]
name = "tap-mysql"
version = "0.0.1"
description = "`tap-mysql` is a Singer tap for mysql, built with the Meltano Singer SDK."
readme = "README.md"
authors = ["AutoIDM"]
keywords = [
    "ELT",
    "mysql",
]
license = "Apache-2.0"

[tool.poetry.dependencies]
python = "<3.12,>=3.8.1"
singer-sdk = { version="^0.30.0" }
mysqlclient = "^2.2.0"
fs-s3fs = { version = "^1.1.1", optional = true }
sshtunnel = "0.4.0"

[tool.poetry.dev-dependencies]
pytest = "^7.3.2"
tox = "^3.24.4"
flake8 = "^5.0.4"
flake8-docstrings = "^1.7.0"
black = "23.1.0"
mypy = "^1.0"
isort = "^5.11.5"
remote-pdb="2.1.0"

[tool.isort]
profile = "black"
multi_line_output = 3 # Vertical Hanging Indent
src_paths = "tap_mysql"


[tool.poetry.group.dev.dependencies]
pytest = "^7.2.1"
faker = ">=18.5.1,<20.0.0"
singer-sdk = { version="^0.30.0", extras = ["testing"] }

[tool.poetry.extras]
s3 = ["fs-s3fs"]

[tool.mypy]
python_version = "3.9"
warn_unused_configs = true
plugins = "sqlmypy"

[tool.ruff]
ignore = [
    "ANN101",  # missing-type-self
    "ANN102",  # missing-type-cls
]
select = ["ALL"]
src = ["tap_mysql"]
target-version = "py37"


[tool.ruff.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.isort]
known-first-party = ["tap_mysql"]

[tool.ruff.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core>=1.0.8"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
# CLI declaration
tap-mysql = 'tap_mysql.tap:TapMySQL.cli'
